{
	/**
	 * Apply snippet for Service Controller
	 */
	"Service Controller": {
		"prefix": "service-controller",
		"body": [
			"<?php",
			"",
			"namespace App\\Http\\Controllers;",
			"",
			"use App\\Services\\Contracts\\\\${1:Model}ServiceInterface;",
			"use App\\Http\\Requests\\\\${1:Model}\\{",
			"    StoreRequest,",
			"    ShowRequest,",
			"    UpdateRequest,",
			"    DestroyRequest,",
			"    SearchRequest",
			"};",
			"",
			"class ${1:Model}Controller extends Controller",
			"{",
			"    /**",
			"     * The service instance.",
			"     *",
			"     * @var \\App\\Services\\Contracts\\\\${1:Model}ServiceInterface",
			"     */",
			"    protected \\$service;",
			"",
			"    /**",
			"     * Create the controller instance and resolve its service.",
			"     * ",
			"     * @param \\App\\Services\\Contracts\\\\${1:Model}ServiceInterface \\$service",
			"     */",
			"    public function __construct(${1:Model}ServiceInterface \\$service)",
			"    {",
			"        \\$this->service = \\$service;",
			"    }",
			"",
			"    /**",
			"     * Display a listing of the resource.",
			"     *",
			"     * @return \\Illuminate\\Http\\Response",
			"     */",
			"    public function index()",
			"    {",
			"        return \\$this->service->index();",
			"    }",
			"",
			"    /**",
			"     * Store a newly created resource in storage.",
			"     *",
			"     * @param  \\App\\Http\\Requests\\\\${1:Model}\\StoreRequest  \\$request",
			"     * @return \\Illuminate\\Http\\Response",
			"     */",
			"    public function store(StoreRequest \\$request)",
			"    {",
			"        \\$validatedRequest = \\$request->validated();",
			"        return \\$this->service->store(\\$validatedRequest);",
			"    }",
			"",
			"    /**",
			"     * Display the specified resource.",
			"     *",
			"     * @param  \\App\\Http\\Requests\\\\${1:Model}\\ShowRequest  \\$request",
			"     * @param  int|string  \\$id",
			"     * @return \\Illuminate\\Http\\Response",
			"     */",
			"    public function show(ShowRequest \\$request, \\$id)",
			"    {",
			"        return \\$this->service->show(\\$id);",
			"    }",
			"",
			"    /**",
			"     * Update the specified resource in storage.",
			"     *",
			"     * @param  \\App\\Http\\Requests\\\\${1:Model}\\UpdateRequest  \\$request",
			"     * @param  int|string  \\$id",
			"     * @return \\Illuminate\\Http\\Response",
			"     */",
			"    public function update(UpdateRequest \\$request, \\$id)",
			"    {",
			"        \\$validatedRequest = \\$request->validated();",
			"        return \\$this->service->update(\\$id, \\$validatedRequest);",
			"    }",
			"",
			"    /**",
			"     * Remove the specified resource from storage.",
			"     *",
			"     * @param  \\App\\Http\\Requests\\\\${1:Model}\\DestroyRequest  \\$request",
			"     * @param  int|string \\$id",
			"     * @return \\Illuminate\\Http\\Response",
			"     */",
			"    public function destroy(DestroyRequest \\$request, \\$id)",
			"    {",
			"        return \\$this->service->destroy(\\$id);",
			"    }",
			"",
			"    /**",
			"     * Search for specific resources in the database.",
			"     *",
			"     * @param  \\App\\Http\\Requests\\\\${1:Model}\\SearchRequest  \\$request",
			"     * @return \\Illuminate\\Http\\Response",
			"     */",
			"    public function search(SearchRequest \\$request)",
			"    {",
			"        \\$validatedRequest = \\$request->validated();",
			"        return \\$this->service->search(\\$validatedRequest);",
			"    }",
			"}",
			""
		],
		"description": "Service Controller"
	},

	/**
	 * Apply snippet for Service Class
	 */
	"Service Class": {
		"prefix": "service-class",
		"body": [
			"<?php",
			"",
			"namespace App\\Services;",
			"",
			"use App\\Repositories\\Contracts\\\\${1:Model}RepositoryInterface;",
			"use App\\Services\\Contracts\\\\${1:Model}ServiceInterface;",
			"use App\\Http\\Resources\\{",
			"    ${1:Model}Resource,",
			"    ${1:Model}ResourceCollection",
			"};",
			"",
			"class ${1:Model}Service extends Service implements ${1:Model}ServiceInterface",
			"{",
			"    /**",
			"     * Resource class of the service.",
			"     * ",
			"     * @var \\App\\Http\\Resources\\\\${1:Model}Resource",
			"     */",
			"    protected \\$resourceClass = ${1:Model}Resource::class;",
			"",
			"    /**",
			"     * Collection class of the service.",
			"     * ",
			"     * @var \\App\\Http\\Resources\\\\${1:Model}ResourceCollection",
			"     */",
			"    protected \\$collectionClass = ${1:Model}ResourceCollection::class;",
			"",
			"    /**",
			"     * Create the service instance and inject its repository.",
			"     *",
			"     * @param App\\Repositories\\Contracts\\\\${1:Model}RepositoryInterface",
			"     */",
			"    public function __construct(${1:Model}RepositoryInterface \\$repository)",
			"    {",
			"        \\$this->repository = \\$repository;",
			"    }",
			"}",
			""
		],
		"description": "Service Class"
	},

	/**
	 * Apply snippet for Service Interface
	 */
	"Service Interface": {
		"prefix": "service-interface",
		"body": [
			"<?php",
			"",
			"namespace App\\Services\\Contracts;",
			"",
			"use App\\Services\\Support\\BaseContracts\\{",
			"    IndexInterface as Index,",
			"    StoreInterface as Store,",
			"    ShowInterface as Show,",
			"    UpdateInterface as Update,",
			"    DestroyInterface as Destroy,",
			"    SearchInterface as Search",
			"};",
			"",
			"interface ${1:Model}ServiceInterface extends Index, Store, Show, Update, Destroy, Search",
			"{",
			"    /**",
			"     * Here you insert custom functions.",
			"     */",
			"}",
			""
		],
		"description": "Service Interface"
	},

	/**
	 * Apply snippet for Repository Class
	 */
	"Repository Class": {
		"prefix": "repository-class",
		"body": [
			"<?php",
			"",
			"namespace App\\Repositories;",
			"",
			"use App\\Models\\\\${1:Model};",
			"use App\\Repositories\\Contracts\\\\${1:Model}RepositoryInterface;",
			"",
			"class ${1:Model}Repository extends Repository implements ${1:Model}RepositoryInterface",
			"{",
			"    /**",
			"     * Create the repository instance.",
			"     *",
			"     * @param \\App\\Models\\\\${1:Model}",
			"     */",
			"    public function __construct(${1:Model} \\$model)",
			"    {",
			"        \\$this->model = \\$model;",
			"    }",
			"}",
			""
		],
		"description": "Repository Class"
	},

	/**
	 * Aply snippet for Repository Interface
	 */
	"Repository Interface": {
		"prefix": "repository-interface",
		"body": [
			"<?php",
			"",
			"namespace App\\Repositories\\Contracts;",
			"",
			"use App\\Repositories\\Support\\BaseContracts\\{",
			"    AllInterface as All,",
			"    CreateInterface as Create,",
			"    FindInterface as Find,",
			"    UpdateInterface as Update,",
			"    DeleteInterface as Delete,",
			"    SearchInterface as Search",
			"};",
			"",
			"interface ${1:Model}RepositoryInterface extends All, Create, Find, Update, Delete, Search",
			"{",
			"    /**",
			"     * Here you insert custom functions.",
			"     */",
			"}",
			""
		],
		"description": "Repository Interface"
	}
}